<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.fdm.legendtrading.springmvc" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource"
		destroy-method="close">
		<beans:property name="dataSourceName" value="ds" />
		<beans:property name="URL"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="user" value="trainee1" />
		<beans:property name="password" value="!QAZSE4" />
	</beans:bean>

	<!-- Hibernate 3 SessionFactory Bean definition -->
	<beans:bean id="hibernate3AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.fdm.legendtrading.springmvc.model.Login
				</beans:value>
				<beans:value>com.fdm.legendtrading.springmvc.model.Trade
				</beans:value>
				<beans:value>com.fdm.legendtrading.springmvc.model.Account
				</beans:value>
				<beans:value>com.fdm.legendtrading.springmvc.model.Entitlement
				</beans:value>
				<beans:value>com.fdm.legendtrading.springmvc.model.Position
				</beans:value>
				<beans:value>com.fdm.legendtrading.springmvc.model.Asset
				</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect
				</beans:prop>
				<beans:prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

<!-- 	<beans:bean id="accountDao"
		class="com.fdm.legendtrading.springmvc.dao.AccountDaoImpl">
		<beans:property name="sessionFactory"
			ref="hibernate3AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="tradeDao"
		class="com.fdm.legendtrading.springmvc.dao.TradeDaoImpl">
		<beans:property name="sessionFactory"
			ref="hibernate3AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="loginDao"
		class="com.fdm.legendtrading.springmvc.dao.LoginDaoImpl">
		<beans:property name="sessionFactory"
			ref="hibernate3AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="positionDao"
		class="com.fdm.legendtrading.springmvc.dao.PositionDaoImpl">
		<beans:property name="sessionFactory"
			ref="hibernate3AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="tradeService"
		class="com.fdm.legendtrading.springmvc.service.TradeServiceImpl">
		<beans:property name="tradeDao" ref="tradeDao"></beans:property>
	</beans:bean>
	<beans:bean id="accountService"
		class="com.fdm.legendtrading.springmvc.service.AccountServiceImpl">
		<beans:property name="accountDao" ref="accountDao"></beans:property>
	</beans:bean>
	<beans:bean id="positionService"
		class="com.fdm.legendtrading.springmvc.service.PositionServiceImpl">
		<beans:property name="positionDao" ref="positionDao"></beans:property>
	</beans:bean>
	<beans:bean id="loginService"
		class="com.fdm.legendtrading.springmvc.service.LoginServiceImpl">
		<beans:property name="loginDao" ref="loginDao"></beans:property>
	</beans:bean> -->


	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate3AnnotatedSessionFactory" />
	</beans:bean>



</beans:beans>